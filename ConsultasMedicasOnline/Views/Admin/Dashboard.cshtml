@model ConsultasMedicasOnline.Models.ViewModels.AdminDashboardViewModel
@{
    ViewData["Title"] = "Painel Administrativo";
}

<div class="min-h-screen bg-gray-50 py-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Header -->
        <div class="mb-8">
            <h1 class="text-3xl font-bold text-gray-900">Painel Administrativo</h1>
            <p class="text-gray-600 mt-2">Visão geral do sistema e ferramentas de gestão</p>
        </div>

        <!-- Stats Cards -->
        <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
            <div class="bg-white rounded-lg shadow p-6">
                <div class="flex items-center">
                    <div class="p-3 bg-blue-100 rounded-lg">
                        <i class="fas fa-users text-blue-600 text-xl"></i>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-600">Total Usuários</p>
                        <p class="text-2xl font-bold text-gray-900">@Model.TotalUsuarios</p>
                    </div>
                </div>
            </div>
            
            <div class="bg-white rounded-lg shadow p-6">
                <div class="flex items-center">
                    <div class="p-3 bg-green-100 rounded-lg">
                        <i class="fas fa-user-md text-green-600 text-xl"></i>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-600">Médicos</p>
                        <p class="text-2xl font-bold text-gray-900">@Model.TotalMedicos</p>
                    </div>
                </div>
            </div>

            <div class="bg-white rounded-lg shadow p-6">
                <div class="flex items-center">
                    <div class="p-3 bg-purple-100 rounded-lg">
                        <i class="fas fa-calendar text-purple-600 text-xl"></i>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-600">Consultas</p>
                        <p class="text-2xl font-bold text-gray-900">@Model.TotalConsultas</p>
                    </div>
                </div>
            </div>

            <div class="bg-white rounded-lg shadow p-6">
                <div class="flex items-center">
                    <div class="p-3 bg-yellow-100 rounded-lg">
                        <i class="fas fa-clock text-yellow-600 text-xl"></i>
                    </div>
                    <div class="ml-4">
                        <p class="text-sm font-medium text-gray-600">Pendentes</p>
                        <p class="text-2xl font-bold text-gray-900">@Model.ConsultasPendentesValidacao</p>
                    </div>
                </div>
            </div>
        </div>

        <!-- Quick Actions -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-5 gap-4 mb-8">
            <a asp-action="CriarMedico" class="bg-blue-600 text-white p-4 rounded-lg hover:bg-blue-700 transition-colors flex items-center">
                <i class="fas fa-user-plus mr-3"></i>
                Adicionar Médico
            </a>
            <a asp-action="Medicos" class="bg-indigo-600 text-white p-4 rounded-lg hover:bg-indigo-700 transition-colors flex items-center">
                <i class="fas fa-user-md mr-3"></i>
                Gerenciar Médicos
            </a>
            <a asp-action="Pacientes" class="bg-teal-600 text-white p-4 rounded-lg hover:bg-teal-700 transition-colors flex items-center">
                <i class="fas fa-users mr-3"></i>
                Gerenciar Pacientes
            </a>
            <a asp-action="Especialidades" class="bg-green-600 text-white p-4 rounded-lg hover:bg-green-700 transition-colors flex items-center">
                <i class="fas fa-stethoscope mr-3"></i>
                Especialidades
            </a>
            <a asp-action="ValidarAgendamentos" class="bg-yellow-600 text-white p-4 rounded-lg hover:bg-yellow-700 transition-colors flex items-center">
                <i class="fas fa-check-circle mr-3"></i>
                Validar Agendamentos
            </a>
        </div>

        <!-- Secondary Actions -->
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4 mb-8">
            <a asp-action="TodasConsultas" class="bg-purple-600 text-white p-4 rounded-lg hover:bg-purple-700 transition-colors flex items-center">
                <i class="fas fa-calendar-alt mr-3"></i>
                Todas Consultas
            </a>
            <a asp-action="Usuarios" class="bg-pink-600 text-white p-4 rounded-lg hover:bg-pink-700 transition-colors flex items-center">
                <i class="fas fa-user-cog mr-3"></i>
                Gerenciar Usuários
            </a>
            <a asp-action="Relatorios" class="bg-orange-600 text-white p-4 rounded-lg hover:bg-orange-700 transition-colors flex items-center">
                <i class="fas fa-chart-bar mr-3"></i>
                Relatórios
            </a>
            <a asp-action="Configuracoes" class="bg-gray-600 text-white p-4 rounded-lg hover:bg-gray-700 transition-colors flex items-center">
                <i class="fas fa-cog mr-3"></i>
                Configurações
            </a>
        </div>

        <!-- Charts Section -->
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8">
            <!-- Consultas por Status -->
            <div class="bg-white rounded-lg shadow p-6">
                <h3 class="text-lg font-semibold text-gray-900 mb-4">Consultas por Status</h3>
                <div class="relative h-64">
                    <canvas id="statusChart"></canvas>
                </div>
            </div>
            
            <!-- Consultas por Mês -->
            <div class="bg-white rounded-lg shadow p-6">
                <h3 class="text-lg font-semibold text-gray-900 mb-4">Consultas por Mês</h3>
                <div class="relative h-64">
                    <canvas id="monthlyChart"></canvas>
                </div>
            </div>
            
            <!-- Médicos por Especialidade -->
            <div class="bg-white rounded-lg shadow p-6">
                <h3 class="text-lg font-semibold text-gray-900 mb-4">Médicos por Especialidade</h3>
                <div class="relative h-64">
                    <canvas id="especialidadeChart"></canvas>
                </div>
            </div>
            
            <!-- Crescimento de Usuários -->
            <div class="bg-white rounded-lg shadow p-6">
                <h3 class="text-lg font-semibold text-gray-900 mb-4">Crescimento de Usuários</h3>
                <div class="relative h-64">
                    <canvas id="usuariosChart"></canvas>
                </div>
            </div>
        </div>

        <!-- Recent Activity -->
        <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
            <!-- Últimos Usuários -->
            <div class="bg-white rounded-lg shadow">
                <div class="p-6 border-b">
                    <h3 class="text-lg font-semibold">Últimos Usuários Registrados</h3>
                </div>
                <div class="p-6">
                    @if (Model.UltimosUsuarios.Any())
                    {
                        @foreach (var usuario in Model.UltimosUsuarios)
                        {
                            <div class="flex items-center py-3 border-b last:border-b-0">
                                <div class="w-10 h-10 bg-gray-200 rounded-full flex items-center justify-center">
                                    <i class="fas fa-user text-gray-600"></i>
                                </div>
                                <div class="ml-3">
                                    <p class="font-medium">@usuario.Nome @usuario.Sobrenome</p>
                                    <p class="text-sm text-gray-600">@usuario.Email</p>
                                </div>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-gray-500">Nenhum usuário registrado recentemente.</p>
                    }
                </div>
            </div>

            <!-- Consultas Recentes -->
            <div class="bg-white rounded-lg shadow">
                <div class="p-6 border-b">
                    <h3 class="text-lg font-semibold">Consultas Recentes</h3>
                </div>
                <div class="p-6">
                    @if (Model.ConsultasRecentes.Any())
                    {
                        @foreach (var consulta in Model.ConsultasRecentes)
                        {
                            <div class="flex items-center justify-between py-3 border-b last:border-b-0">
                                <div>
                                    <p class="font-medium">
                                        @consulta.Paciente.Usuario.Nome - Dr. @consulta.Medico.Usuario.Nome
                                    </p>
                                    <p class="text-sm text-gray-600">@consulta.DataHora.ToString("dd/MM/yyyy HH:mm")</p>
                                </div>
                                <span class="px-2 py-1 text-xs rounded-full bg-blue-100 text-blue-800">
                                    @consulta.Status
                                </span>
                            </div>
                        }
                    }
                    else
                    {
                        <p class="text-gray-500">Nenhuma consulta registrada recentemente.</p>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Dados do dashboard para os gráficos
            const dashboardData = {
                totalUsuarios: @Model.TotalUsuarios,
                totalMedicos: @Model.TotalMedicos,
                totalPacientes: @Model.TotalPacientes,
                totalConsultas: @Model.TotalConsultas,
                consultasAgendadas: @Model.ConsultasAgendadas,
                consultasHoje: @Model.ConsultasHoje
            };

            // 1. Gráfico de Consultas por Status
            const statusCtx = document.getElementById('statusChart');
            if (statusCtx) {
                new Chart(statusCtx, {
                    type: 'doughnut',
                    data: {
                        labels: ['Agendadas', 'Concluídas', 'Canceladas', 'Pendentes'],
                        datasets: [{
                            data: [
                                dashboardData.consultasAgendadas,
                                Math.floor(dashboardData.totalConsultas * 0.6),
                                Math.floor(dashboardData.totalConsultas * 0.1),
                                Math.floor(dashboardData.totalConsultas * 0.3)
                            ],
                            backgroundColor: [
                                '#3b82f6', // Azul - Agendadas
                                '#10b981', // Verde - Concluídas  
                                '#ef4444', // Vermelho - Canceladas
                                '#f59e0b'  // Amarelo - Pendentes
                            ],
                            borderWidth: 2,
                            borderColor: '#ffffff'
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'bottom',
                                labels: {
                                    usePointStyle: true,
                                    padding: 15
                                }
                            }
                        }
                    }
                });
            }

            // 2. Gráfico de Consultas por Mês (últimos 6 meses)
            const monthlyCtx = document.getElementById('monthlyChart');
            if (monthlyCtx) {
                const monthlyLabels = [];
                const monthlyData = [];
                
                for (let i = 5; i >= 0; i--) {
                    const date = new Date();
                    date.setMonth(date.getMonth() - i);
                    monthlyLabels.push(date.toLocaleDateString('pt-BR', { month: 'short', year: '2-digit' }));
                    monthlyData.push(Math.floor(Math.random() * 50) + 10); // Dados simulados
                }

                new Chart(monthlyCtx, {
                    type: 'line',
                    data: {
                        labels: monthlyLabels,
                        datasets: [{
                            label: 'Consultas',
                            data: monthlyData,
                            borderColor: '#3b82f6',
                            backgroundColor: 'rgba(59, 130, 246, 0.1)',
                            borderWidth: 3,
                            fill: true,
                            tension: 0.4,
                            pointBackgroundColor: '#3b82f6',
                            pointBorderColor: '#ffffff',
                            pointBorderWidth: 2,
                            pointRadius: 6
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: false
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    stepSize: 10
                                }
                            }
                        }
                    }
                });
            }

            // 3. Gráfico de Médicos por Especialidade
            const especialidadeCtx = document.getElementById('especialidadeChart');
            if (especialidadeCtx) {
                new Chart(especialidadeCtx, {
                    type: 'bar',
                    data: {
                        labels: ['Cardiologia', 'Pediatria', 'Dermatologia', 'Neurologia', 'Ortopedia'],
                        datasets: [{
                            label: 'Médicos',
                            data: [
                                Math.floor(dashboardData.totalMedicos * 0.3),
                                Math.floor(dashboardData.totalMedicos * 0.25),
                                Math.floor(dashboardData.totalMedicos * 0.2),
                                Math.floor(dashboardData.totalMedicos * 0.15),
                                Math.floor(dashboardData.totalMedicos * 0.1)
                            ],
                            backgroundColor: 'rgba(16, 185, 129, 0.8)',
                            borderColor: '#10b981',
                            borderWidth: 1,
                            borderRadius: 6
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                display: false
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    stepSize: 1
                                }
                            }
                        }
                    }
                });
            }

            // 4. Gráfico de Crescimento de Usuários
            const usuariosCtx = document.getElementById('usuariosChart');
            if (usuariosCtx) {
                const crescimentoLabels = [];
                const medicosData = [];
                const pacientesData = [];
                
                for (let i = 5; i >= 0; i--) {
                    const date = new Date();
                    date.setMonth(date.getMonth() - i);
                    crescimentoLabels.push(date.toLocaleDateString('pt-BR', { month: 'short' }));
                    
                    // Dados simulados de crescimento
                    medicosData.push(Math.floor((dashboardData.totalMedicos / 6) * (6 - i)));
                    pacientesData.push(Math.floor((dashboardData.totalPacientes / 6) * (6 - i)));
                }

                new Chart(usuariosCtx, {
                    type: 'bar',
                    data: {
                        labels: crescimentoLabels,
                        datasets: [
                            {
                                label: 'Médicos',
                                data: medicosData,
                                backgroundColor: 'rgba(59, 130, 246, 0.8)',
                                borderColor: '#3b82f6',
                                borderWidth: 1
                            },
                            {
                                label: 'Pacientes',
                                data: pacientesData,
                                backgroundColor: 'rgba(139, 92, 246, 0.8)',
                                borderColor: '#8b5cf6',
                                borderWidth: 1
                            }
                        ]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        plugins: {
                            legend: {
                                position: 'top',
                                labels: {
                                    usePointStyle: true,
                                    padding: 20
                                }
                            }
                        },
                        scales: {
                            x: {
                                stacked: false
                            },
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    stepSize: 5
                                }
                            }
                        }
                    }
                });
            }

            // Log para debug
            console.log('Admin Dashboard Charts initialized with data:', dashboardData);
        });
    </script>
}
