@model IEnumerable<ConsultasMedicasOnline.Models.Consulta>
@{
    ViewData["Title"] = "Todas as Consultas";
}

<div class="min-h-screen bg-gray-50 py-8">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <!-- Success and Error messages -->
        @if (TempData["Success"] != null)
        {
            <div class="mb-4 bg-green-100 border-l-4 border-green-500 text-green-700 p-4 rounded-md">
                <div class="flex">
                    <div class="flex-shrink-0">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <div class="ml-3">
                        <p>@TempData["Success"]</p>
                    </div>
                </div>
            </div>
        }

        @if (TempData["Error"] != null)
        {
            <div class="mb-4 bg-red-100 border-l-4 border-red-500 text-red-700 p-4 rounded-md">
                <div class="flex">
                    <div class="flex-shrink-0">
                        <i class="fas fa-exclamation-circle"></i>
                    </div>
                    <div class="ml-3">
                        <p>@TempData["Error"]</p>
                    </div>
                </div>
            </div>
        }

        <div class="mb-8 flex justify-between items-center">
            <div>
                <h1 class="text-3xl font-bold text-gray-900">Todas as Consultas</h1>
                <p class="text-gray-600 mt-2">Gerenciamento completo das consultas</p>
            </div>
            <div>
                <a href="@Url.Action("ValidarAgendamentos")" class="bg-blue-600 text-white px-4 py-2 rounded-md hover:bg-blue-700 transition-colors">
                    <i class="fas fa-tasks mr-2"></i>Validar Agendamentos
                </a>
            </div>
        </div>

        <div class="bg-white rounded-lg shadow overflow-hidden">
            @if (Model.Any())
            {
                <div class="overflow-x-auto">
                    <table class="min-w-full divide-y divide-gray-200">
                        <thead class="bg-gray-50">
                            <tr>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Paciente</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Médico</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Data/Hora</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Tipo</th>
                                <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase">Status</th>
                                <th class="px-6 py-3 text-right text-xs font-medium text-gray-500 uppercase">Ações</th>
                            </tr>
                        </thead>
                        <tbody class="divide-y divide-gray-200">
                            @foreach (var consulta in Model)
                            {
                                <tr>
                                    <td class="px-6 py-4">
                                        <div>
                                            <div class="font-medium">@consulta.Paciente.Usuario.Nome @consulta.Paciente.Usuario.Sobrenome</div>
                                            <div class="text-sm text-gray-600">@consulta.Paciente.Usuario.Email</div>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4">
                                        <div>
                                            <div class="font-medium">Dr. @consulta.Medico.Usuario.Nome @consulta.Medico.Usuario.Sobrenome</div>
                                            <div class="text-sm text-gray-600">@consulta.Medico.Especialidade.Nome</div>
                                        </div>
                                    </td>
                                    <td class="px-6 py-4 text-sm">
                                        @consulta.DataHora.ToString("dd/MM/yyyy HH:mm")
                                    </td>
                                    <td class="px-6 py-4 text-sm">
                                        @(consulta.Tipo == ConsultasMedicasOnline.Models.TipoConsulta.Presencial ? "Presencial" : "Online")
                                    </td>
                                    <td class="px-6 py-4">
                                        @{
                                            var (statusText, statusColor) = GetStatusInfo(consulta.Status);
                                        }
                                        <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium @statusColor">
                                            @statusText
                                        </span>
                                    </td>
                                    <td class="px-6 py-4 text-right space-x-2 whitespace-nowrap">
                                        <a href="@Url.Action("Details", "Consultas", new { id = consulta.Id })" class="text-blue-600 hover:text-blue-800" title="Ver detalhes">
                                            <i class="fas fa-eye"></i>
                                        </a>
                                        
                                        @if (consulta.Status == ConsultasMedicasOnline.Models.StatusConsulta.Agendada)
                                        {
                                            <form asp-action="AprovarConsulta" method="post" class="inline">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="id" value="@consulta.Id" />
                                                <input type="hidden" name="returnUrl" value="TodasConsultas" />
                                                <button type="submit" class="text-green-600 hover:text-green-800" title="Aprovar consulta">
                                                    <i class="fas fa-check"></i>
                                                </button>
                                            </form>
                                            
                                            <button onclick="rejeitarConsulta(@consulta.Id, 'TodasConsultas')" class="text-red-600 hover:text-red-800" title="Rejeitar consulta">
                                                <i class="fas fa-times"></i>
                                            </button>
                                        }
                                        else if (consulta.Status == ConsultasMedicasOnline.Models.StatusConsulta.Confirmada)
                                        {
                                            <form asp-action="ConcluirConsulta" method="post" class="inline">
                                                @Html.AntiForgeryToken()
                                                <input type="hidden" name="id" value="@consulta.Id" />
                                                <input type="hidden" name="returnUrl" value="TodasConsultas" />
                                                <button type="submit" class="text-blue-600 hover:text-blue-800" title="Marcar como concluída">
                                                    <i class="fas fa-check-double"></i>
                                                </button>
                                            </form>
                                        }
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            }
            else
            {
                <div class="text-center py-12">
                    <i class="fas fa-calendar-times text-gray-400 text-6xl mb-4"></i>
                    <h3 class="text-lg font-semibold text-gray-900">Nenhuma consulta encontrada</h3>
                    <p class="text-gray-600">Não existem consultas registradas no sistema.</p>
                </div>
            }
        </div>
    </div>
</div>

@section Scripts {
    <script>
        function rejeitarConsulta(id, returnUrl) {
            const motivo = prompt('Informe o motivo da rejeição:');
            if (motivo && motivo.trim()) {
                const form = document.createElement('form');
                form.method = 'POST';
                form.action = '@Url.Action("RejeitarConsulta")';
                
                // Add anti-forgery token
                const tokenInput = document.createElement('input');
                tokenInput.type = 'hidden';
                tokenInput.name = '__RequestVerificationToken';
                tokenInput.value = document.querySelector('input[name="__RequestVerificationToken"]').value;
                
                const idInput = document.createElement('input');
                idInput.type = 'hidden';
                idInput.name = 'id';
                idInput.value = id;
                
                const motivoInput = document.createElement('input');
                motivoInput.type = 'hidden';
                motivoInput.name = 'motivo';
                motivoInput.value = motivo.trim();
                
                // Add return URL to redirect back to the proper page
                const returnUrlInput = document.createElement('input');
                returnUrlInput.type = 'hidden';
                returnUrlInput.name = 'returnUrl';
                returnUrlInput.value = returnUrl || '';
                
                form.appendChild(tokenInput);
                form.appendChild(idInput);
                form.appendChild(motivoInput);
                form.appendChild(returnUrlInput);
                document.body.appendChild(form);
                form.submit();
            } else if (motivo !== null) { // User clicked OK but didn't provide a reason
                alert('Você precisa informar um motivo para rejeitar a consulta.');
            }
        }
    </script>
}

@functions {
    (string text, string cssClass) GetStatusInfo(ConsultasMedicasOnline.Models.StatusConsulta status)
    {
        return status switch
        {
            ConsultasMedicasOnline.Models.StatusConsulta.Agendada => ("Aguardando aprovação", "bg-yellow-100 text-yellow-800"),
            ConsultasMedicasOnline.Models.StatusConsulta.Confirmada => ("Confirmada", "bg-green-100 text-green-800"),
            ConsultasMedicasOnline.Models.StatusConsulta.Concluida => ("Concluída", "bg-blue-100 text-blue-800"),
            ConsultasMedicasOnline.Models.StatusConsulta.Cancelada => ("Cancelada", "bg-red-100 text-red-800"),
            _ => ("Desconhecido", "bg-gray-100 text-gray-800")
        };
    }
}
